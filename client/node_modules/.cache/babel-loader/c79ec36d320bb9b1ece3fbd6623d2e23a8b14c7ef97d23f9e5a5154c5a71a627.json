{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhavya Verma\\\\Desktop\\\\new project\\\\client\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    contact: '',\n    address: '',\n    pincode: ''\n  });\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Failed to fetch users: ', error);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditClick = userData => {\n    setIsEditMode(true);\n    setEditData(userData);\n    setFormData(userData); // Populate form data with user data for editing\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isEditMode) {\n        await axios.put(`http://localhost:5000/api/users/${editData._id}`, formData); // Assuming editData has _id field\n        alert('User data updated ');\n      } else {\n        await axios.post('http://localhost:5000/api/users', formData);\n        alert('User Added');\n      }\n      setIsEditMode(false);\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        contact: '',\n        address: '',\n        pincode: ''\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error('Failed to add/update user: ', error);\n      alert('Failed to add/update user');\n    }\n  };\n  const deleteUser = async userId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/users/${userId}`);\n      alert('User deleted');\n      fetchUsers();\n    } catch (error) {\n      console.error('Failed to delete user: ', error);\n      alert('Failed to delete user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteUser(user._id),\n                className: \"delete-button\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditClick(user),\n                className: \"edit-button\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isEditMode ? 'Edit User' : 'Add New User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isEditMode ? 'Update' : 'Add New User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"/OJNHEpA1hdkGxPql4QrtgO8UWY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","isEditMode","setIsEditMode","editData","setEditData","formData","setFormData","firstName","lastName","email","contact","address","pincode","fetchUsers","response","get","data","error","console","handleChange","e","target","name","value","handleEditClick","userData","handleSubmit","preventDefault","put","_id","alert","post","deleteUser","userId","delete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/Bhavya Verma/Desktop/new project/client/src/components/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    contact: '',\r\n    address: '',\r\n    pincode: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/users');\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch users: ', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditClick = (userData) => {\r\n    setIsEditMode(true);\r\n    setEditData(userData);\r\n    setFormData(userData); // Populate form data with user data for editing\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (isEditMode) {\r\n        await axios.put(`http://localhost:5000/api/users/${editData._id}`, formData); // Assuming editData has _id field\r\n        alert('User data updated ');\r\n      } else {\r\n        await axios.post('http://localhost:5000/api/users', formData);\r\n        alert('User Added');\r\n      }\r\n      setIsEditMode(false);\r\n      setFormData({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        contact: '',\r\n        address: '',\r\n        pincode: ''\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Failed to add/update user: ', error);\r\n      alert('Failed to add/update user');\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/users/${userId}`);\r\n      alert('User deleted');\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Failed to delete user: ', error);\r\n      alert('Failed to delete user');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table-wrapper\">\r\n        <h2>User List</h2>\r\n        <table>\r\n          {/* Table headers */}\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id}>\r\n                {/* Table data */}\r\n                <td>\r\n                  <button onClick={() => deleteUser(user._id)} className=\"delete-button\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => handleEditClick(user)} className=\"edit-button\">\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Form for adding/editing user */}\r\n      <div>\r\n        <h2>{isEditMode ? 'Edit User' : 'Add New User'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Form inputs */}\r\n          <button type=\"submit\">\r\n            {isEditMode ? 'Update' : 'Add New User'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACdoB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iCAAiC,CAAC;MACnEf,QAAQ,CAACc,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,YAAY,GAAGC,CAAC,IAAI;IACxBd,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACe,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpCvB,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAACqB,QAAQ,CAAC;IACrBnB,WAAW,CAACmB,QAAQ,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAI1B,UAAU,EAAE;QACd,MAAMP,KAAK,CAACkC,GAAG,CAAE,mCAAkCzB,QAAQ,CAAC0B,GAAI,EAAC,EAAExB,QAAQ,CAAC,CAAC,CAAC;QAC9EyB,KAAK,CAAC,oBAAoB,CAAC;MAC7B,CAAC,MAAM;QACL,MAAMpC,KAAK,CAACqC,IAAI,CAAC,iCAAiC,EAAE1B,QAAQ,CAAC;QAC7DyB,KAAK,CAAC,YAAY,CAAC;MACrB;MACA5B,aAAa,CAAC,KAAK,CAAC;MACpBI,WAAW,CAAC;QACVC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC,CAAC;MACFC,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDa,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMvC,KAAK,CAACwC,MAAM,CAAE,mCAAkCD,MAAO,EAAC,CAAC;MAC/DH,KAAK,CAAC,cAAc,CAAC;MACrBjB,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Ca,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACElC,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BvC,OAAA;QAAAuC,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5C,OAAA;QAAAuC,QAAA,eAEEvC,OAAA;UAAAuC,QAAA,EACGpC,KAAK,CAAC0C,GAAG,CAACC,IAAI,iBACb9C,OAAA;YAAAuC,QAAA,gBAEEvC,OAAA;cAAAuC,QAAA,eACEvC,OAAA;gBAAQ+C,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAACU,IAAI,CAACb,GAAG,CAAE;gBAACO,SAAS,EAAC,eAAe;gBAAAD,QAAA,EAAC;cAEvE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACL5C,OAAA;cAAAuC,QAAA,eACEvC,OAAA;gBAAQ+C,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACkB,IAAI,CAAE;gBAACN,SAAS,EAAC,aAAa;gBAAAD,QAAA,EAAC;cAEtE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAXEE,IAAI,CAACb,GAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYb,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN5C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAKlC,UAAU,GAAG,WAAW,GAAG;MAAc;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpD5C,OAAA;QAAMgD,QAAQ,EAAElB,YAAa;QAAAS,QAAA,eAE3BvC,OAAA;UAAQiD,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAClBlC,UAAU,GAAG,QAAQ,GAAG;QAAc;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA9GID,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAgHd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}